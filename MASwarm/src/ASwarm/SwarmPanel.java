/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SwarmPanel.java
 *
 * Created on 18.07.2013, 14:46:07
 */
package ASwarm;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zaytsevid
 */
public class SwarmPanel extends javax.swing.JPanel implements GlobalsPainter,SwarmController {

    private ASwarmFactory amf;
    private ASwarm swarm;
    private LineChart lc;
    private boolean playing = false;
    private DefaultTableModel tm;
    private JPanel pan;
    private int paintStep = 1;
    private int graphStep = 1;
    private int graphPaintStep = 1;

    /** Creates new form SwarmPanel */
    public SwarmPanel() {
        initComponents();
        //initComponents();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        swarmPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        parTable = new javax.swing.JTable();
        refreshButton = new javax.swing.JButton();
        playButton = new javax.swing.JButton();
        timeTextField = new javax.swing.JTextField();
        hTextField = new javax.swing.JTextField();
        hPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();

        javax.swing.GroupLayout swarmPanelLayout = new javax.swing.GroupLayout(swarmPanel);
        swarmPanel.setLayout(swarmPanelLayout);
        swarmPanelLayout.setHorizontalGroup(
            swarmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 253, Short.MAX_VALUE)
        );
        swarmPanelLayout.setVerticalGroup(
            swarmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 446, Short.MAX_VALUE)
        );

        parTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Par", "Value"
            }
        ));
        jScrollPane1.setViewportView(parTable);

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        playButton.setText("Play");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        hPanel.setMinimumSize(new java.awt.Dimension(400, 300));
        hPanel.setPreferredSize(new java.awt.Dimension(400, 300));

        javax.swing.GroupLayout hPanelLayout = new javax.swing.GroupLayout(hPanel);
        hPanel.setLayout(hPanelLayout);
        hPanelLayout.setHorizontalGroup(
            hPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );
        hPanelLayout.setVerticalGroup(
            hPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 365, Short.MAX_VALUE)
        );

        jLabel1.setText("t=");

        jLabel2.setText("h=");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(swarmPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(hTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timeTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 505, Short.MAX_VALUE)
                        .addComponent(saveButton))
                    .addComponent(hPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(refreshButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(refreshButton)
                                    .addComponent(playButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(timeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(hTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addComponent(saveButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                    .addComponent(swarmPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        // TODO add your handling code here:
        playpause();
    }//GEN-LAST:event_playButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        save();
    }//GEN-LAST:event_saveButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel hPanel;
    private javax.swing.JTextField hTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable parTable;
    private javax.swing.JButton playButton;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JPanel swarmPanel;
    private javax.swing.JTextField timeTextField;
    // End of variables declaration//GEN-END:variables

    public void setSwarmFactory(ASwarmFactory mf) {
        amf = mf;
        ASwarm m = mf.createSwarm();
        setSwarm(m);
    }

    public void killLineChart(){
        lc = null;
        hPanel.setVisible(false);
    }

    public void setPaintStep(int i) {
        paintStep = i;
    }

    public void setGraphStep(int i) {
        graphStep = i;
    }

    public void setGraphPaintStep(int i) {
        graphPaintStep = i;
    }

    public void paintGlobals(Globals g) {
        if (lc != null) {
            if (graphStep != 0 && g.time % graphStep == 0) {
                lc.addMeaning(0, g.h);
            }
        }
        if (paintStep != 0 && g.time % paintStep == 0) {
            timeTextField.setText("" + g.time);
            hTextField.setText("" + g.h);
            if (lc != null && graphPaintStep!=0 && g.time % graphPaintStep == 0) {
                lc.repaint();
            }
        }
    }

    /*void paintGraph(Globals g) {
    Cursor c = getCursor();
    setCursor(new Cursor(Cursor.WAIT_CURSOR));
    hPanel.removeAll();
    hPanel.setLayout(new FlowLayout());
    hPanel.add(new JLabel("Please wait..."));
    hPanel.validate();
    hPanel.repaint();
    hPanel.setLayout(new FlowLayout());
    DiagrPanel dp = new DiagrPanel();
    dp.setBlanc(g.data);
    hPanel.removeAll();
    hPanel.add(dp);
    hPanel.validate();
    hPanel.repaint();
    setCursor(c);
    }*/
    private void setSwarm(ASwarm s) {
        s.setController(this);
        if (pan != null) {
            pan.setVisible(false);
        }
        //  swarmPanel.remove(pan);
        Globals g = new Globals();
        g.setPainter(this);
        s.setGlobals(g);

        pan = s.getPanel();
        swarmPanel.add(pan);
        swarm = s;
        if (lc != null) {
            hPanel.remove(lc);
        }
        lc = new LineChart();
        lc.addRow("h", Color.red);
        //hPanel.removeAll();
        hPanel.setLayout(new GridLayout(1, 1));
        //hPanel.setLayout(new FlowLayout());
        hPanel.add(lc);//,BorderLayout.CENTER);
        hPanel.validate();
    }

    private void getPars() {
        for (int i = 0; i < tm.getRowCount(); i++) {
            String k = (String) tm.getValueAt(i, 0);
            String v = (String) tm.getValueAt(i, 1);
            Params.map.put(k, v);
        }
        swarm.setParams();
    }

    private void refresh() {
        if (playing) {
            playpause();
        }
        swarm.interrupt();
        getPars();
        swarm = amf.createSwarm();
        setSwarm(swarm);
        swarmPanel.validate();
        swarmPanel.repaint();
    }

    private void playpause() {
        if (playing) {
            swarm.pause();
            playButton.setText("Play");
            playing = false;
        } else {
            getPars();
            swarm.play();
            playButton.setText("Pause");
            playing = true;
        }
    }

    private void save() {
        if(lc==null)
            return;
        JFileChooser fc = new JFileChooser();
            fc.setFileFilter(new ExtFileFilter("csv", "CSV file"));
            fc.setSelectedFile(new File("*.csv"));
            int ret = fc.showSaveDialog(this);
            if (ret == JFileChooser.APPROVE_OPTION) {
                File f = fc.getSelectedFile();
            try {
                lc.saveTo(f);
            } catch (Exception ex) {
                Logger.getLogger(SwarmPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
    }

    public void pause() {
        if(playing)
            playpause();
    }

    void init() {
        swarmPanel.setLayout(new FlowLayout());
        //setDefaultCloseOperation(SwarmFrame.HIDE_ON_CLOSE);

        tm = (DefaultTableModel) parTable.getModel();//new DefaultTableModel();
        //tm.addColumn("Par");
        //tm.addColumn("Value");
        for (String k : Params.map.keySet()) {
            Object[] ob = new Object[2];
            ob[0] = k;
            ob[1] = Params.map.get(k);
            tm.addRow(ob);
        }
        parTable.setModel(tm);
    }
}
